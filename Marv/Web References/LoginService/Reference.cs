//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace Marv.LoginService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BRIXLoginServiceSoap", Namespace="http://www.dnv.com/WebServices/BRIXSecurity/")]
    public partial class BRIXLoginService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private BRIXAuthenticationHeader bRIXAuthenticationHeaderValueField;
        
        private System.Threading.SendOrPostCallback LogInOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback SecurityTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateSecurityTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityTokenFromOldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImpersonateTokenOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BRIXLoginService() {
            this.Url = global::Marv.Properties.Settings.Default.Marv_LoginService_BRIXLoginService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public BRIXAuthenticationHeader BRIXAuthenticationHeaderValue {
            get {
                return this.bRIXAuthenticationHeaderValueField;
            }
            set {
                this.bRIXAuthenticationHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LogInCompletedEventHandler LogInCompleted;
        
        /// <remarks/>
        public event LogOutCompletedEventHandler LogOutCompleted;
        
        /// <remarks/>
        public event SecurityTokenCompletedEventHandler SecurityTokenCompleted;
        
        /// <remarks/>
        public event ClearCacheCompletedEventHandler ClearCacheCompleted;
        
        /// <remarks/>
        public event ValidateSecurityTokenCompletedEventHandler ValidateSecurityTokenCompleted;
        
        /// <remarks/>
        public event GetSecurityTokenFromOldCompletedEventHandler GetSecurityTokenFromOldCompleted;
        
        /// <remarks/>
        public event ImpersonateTokenCompletedEventHandler ImpersonateTokenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("BRIXAuthenticationHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dnv.com/WebServices/BRIXSecurity/LogIn", RequestNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", ResponseNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LogIn(string username, string password) {
            object[] results = this.Invoke("LogIn", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogInAsync(string username, string password) {
            this.LogInAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LogInAsync(string username, string password, object userState) {
            if ((this.LogInOperationCompleted == null)) {
                this.LogInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogInOperationCompleted);
            }
            this.InvokeAsync("LogIn", new object[] {
                        username,
                        password}, this.LogInOperationCompleted, userState);
        }
        
        private void OnLogInOperationCompleted(object arg) {
            if ((this.LogInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogInCompleted(this, new LogInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("BRIXAuthenticationHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dnv.com/WebServices/BRIXSecurity/LogOut", RequestNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", ResponseNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LogOut() {
            object[] results = this.Invoke("LogOut", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogOutAsync() {
            this.LogOutAsync(null);
        }
        
        /// <remarks/>
        public void LogOutAsync(object userState) {
            if ((this.LogOutOperationCompleted == null)) {
                this.LogOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOutOperationCompleted);
            }
            this.InvokeAsync("LogOut", new object[0], this.LogOutOperationCompleted, userState);
        }
        
        private void OnLogOutOperationCompleted(object arg) {
            if ((this.LogOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOutCompleted(this, new LogOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("BRIXAuthenticationHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dnv.com/WebServices/BRIXSecurity/SecurityToken", RequestNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", ResponseNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SecurityToken() {
            object[] results = this.Invoke("SecurityToken", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SecurityTokenAsync() {
            this.SecurityTokenAsync(null);
        }
        
        /// <remarks/>
        public void SecurityTokenAsync(object userState) {
            if ((this.SecurityTokenOperationCompleted == null)) {
                this.SecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("SecurityToken", new object[0], this.SecurityTokenOperationCompleted, userState);
        }
        
        private void OnSecurityTokenOperationCompleted(object arg) {
            if ((this.SecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SecurityTokenCompleted(this, new SecurityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dnv.com/WebServices/BRIXSecurity/ClearCache", RequestNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", ResponseNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClearCache(string username, string password) {
            object[] results = this.Invoke("ClearCache", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClearCacheAsync(string username, string password) {
            this.ClearCacheAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ClearCacheAsync(string username, string password, object userState) {
            if ((this.ClearCacheOperationCompleted == null)) {
                this.ClearCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearCacheOperationCompleted);
            }
            this.InvokeAsync("ClearCache", new object[] {
                        username,
                        password}, this.ClearCacheOperationCompleted, userState);
        }
        
        private void OnClearCacheOperationCompleted(object arg) {
            if ((this.ClearCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCacheCompleted(this, new ClearCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("BRIXAuthenticationHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dnv.com/WebServices/BRIXSecurity/ValidateSecurityToken", RequestNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", ResponseNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateSecurityToken(string securityToken) {
            object[] results = this.Invoke("ValidateSecurityToken", new object[] {
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateSecurityTokenAsync(string securityToken) {
            this.ValidateSecurityTokenAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void ValidateSecurityTokenAsync(string securityToken, object userState) {
            if ((this.ValidateSecurityTokenOperationCompleted == null)) {
                this.ValidateSecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("ValidateSecurityToken", new object[] {
                        securityToken}, this.ValidateSecurityTokenOperationCompleted, userState);
        }
        
        private void OnValidateSecurityTokenOperationCompleted(object arg) {
            if ((this.ValidateSecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateSecurityTokenCompleted(this, new ValidateSecurityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("BRIXAuthenticationHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dnv.com/WebServices/BRIXSecurity/GetSecurityTokenFromOld", RequestNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", ResponseNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSecurityTokenFromOld(string oldSecurityTicket) {
            object[] results = this.Invoke("GetSecurityTokenFromOld", new object[] {
                        oldSecurityTicket});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityTokenFromOldAsync(string oldSecurityTicket) {
            this.GetSecurityTokenFromOldAsync(oldSecurityTicket, null);
        }
        
        /// <remarks/>
        public void GetSecurityTokenFromOldAsync(string oldSecurityTicket, object userState) {
            if ((this.GetSecurityTokenFromOldOperationCompleted == null)) {
                this.GetSecurityTokenFromOldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityTokenFromOldOperationCompleted);
            }
            this.InvokeAsync("GetSecurityTokenFromOld", new object[] {
                        oldSecurityTicket}, this.GetSecurityTokenFromOldOperationCompleted, userState);
        }
        
        private void OnGetSecurityTokenFromOldOperationCompleted(object arg) {
            if ((this.GetSecurityTokenFromOldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityTokenFromOldCompleted(this, new GetSecurityTokenFromOldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("BRIXAuthenticationHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dnv.com/WebServices/BRIXSecurity/ImpersonateToken", RequestNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", ResponseNamespace="http://www.dnv.com/WebServices/BRIXSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ImpersonateToken(string impersonateUser) {
            object[] results = this.Invoke("ImpersonateToken", new object[] {
                        impersonateUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImpersonateTokenAsync(string impersonateUser) {
            this.ImpersonateTokenAsync(impersonateUser, null);
        }
        
        /// <remarks/>
        public void ImpersonateTokenAsync(string impersonateUser, object userState) {
            if ((this.ImpersonateTokenOperationCompleted == null)) {
                this.ImpersonateTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImpersonateTokenOperationCompleted);
            }
            this.InvokeAsync("ImpersonateToken", new object[] {
                        impersonateUser}, this.ImpersonateTokenOperationCompleted, userState);
        }
        
        private void OnImpersonateTokenOperationCompleted(object arg) {
            if ((this.ImpersonateTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImpersonateTokenCompleted(this, new ImpersonateTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.dnv.com/WebServices/BRIXSecurity/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.dnv.com/WebServices/BRIXSecurity/", IsNullable=false)]
    public partial class BRIXAuthenticationHeader : System.Web.Services.Protocols.SoapHeader {
        
        private bool authenticatedField;
        
        private string valueField;
        
        private System.DateTime issueDateField;
        
        private System.DateTime expirationField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public bool authenticated {
            get {
                return this.authenticatedField;
            }
            set {
                this.authenticatedField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LogInCompletedEventHandler(object sender, LogInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LogOutCompletedEventHandler(object sender, LogOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SecurityTokenCompletedEventHandler(object sender, SecurityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecurityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SecurityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ClearCacheCompletedEventHandler(object sender, ClearCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ValidateSecurityTokenCompletedEventHandler(object sender, ValidateSecurityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateSecurityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateSecurityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSecurityTokenFromOldCompletedEventHandler(object sender, GetSecurityTokenFromOldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityTokenFromOldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityTokenFromOldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImpersonateTokenCompletedEventHandler(object sender, ImpersonateTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImpersonateTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImpersonateTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591